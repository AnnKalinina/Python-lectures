# coding: utf-8
#Напишем простое клиент-серверное приложение. Для этого нам нужно импортировать
#класс socket из стандартной библиотеки, в котором есть все методы для
#организации соединения. Клиент посылает строку на сервер, сервер получает ее и
#отсылает клиенту обратно.
import socket
import sys

#Код простого сервера: вначале мы создаем сокет, представляющий собой указатель
#на объект соединения. Этому сокету мы передаем два аргумента: первый аргумент
#говорит о том, что это интернет-сокет, второй – что мы используем TCP-протокол.
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = 'localhost'
port = 8007

#Первый метод, который мы используем – bind(), он инициализирует ip-адрес и
#порт. При этом проверяется, не занят ли порт другой программой.
s.bind((host, port))

#Второй метод – listen() – устанавливает количество клиентских соединений,
#которые будет обслуживать операционная система.
s.listen(1)

#Третья функция – accept() – блокирует приложение до тех пор, пока не придет
#сообщение от клиента. Функция возвращает кортеж из двух параметров – объект
#самого соединения и адрес клиента. 
conn, addr = s.accept()
#Четвертая функция – recv() – читает данные из сокета. Аргумент устанавливает
#максимальное количество байтов в сообщении.
data = conn.recv(1000000)
print 'client is at', addr , data
#Пятая функция – send() – отсылает данные клиенту.
conn.send(data)
#Функция raw_input() просто блокирует клавиатуру.
z = raw_input()
#Шестая функция – close() – закрывает сокет.
conn.close()

